~ Oker Final List Test Suite
~ This script tests all list features, including interaction with functions.

say "--- Final List Test Suite ---"
say " "

~ --- 1. Basic Creation, Access, and Modification ---
say "1. Testing Basic Operations:"
let my_list = [10, "hello", true]
my_list[1] = "world"
say "   -> Final list: " + str(my_list)
say "   -> Element at index 2: " + str(my_list[2])
say " "

~ --- 2. Nested Lists and len() ---
say "2. Testing Nested Lists and len():"
let nested = [[1, 2], [3, 4]]
say "   -> Nested list: " + str(nested)
say "   -> Length of outer list: " + str(len(nested))
say "   -> Length of inner list: " + str(len(nested[0]))
say " "

~ --- 3. Passing a List to a Function ---
say "3. Testing Passing a List to a Function:"
makef sum_list(items):
    let total = 0
    let i = 0
    while i < len(items):
        let total = total + items[i]
        let i = i + 1
    end
    return total
end

let numbers = [5, 10, 15, 20]
let list_sum = sum_list(numbers)
say "   -> The sum of " + str(numbers) + " is: " + str(list_sum)
say " "

~ --- 4. Returning a List from a Function ---
say "4. Testing Returning a List from a Function:"
makef generate_sequence(count):
    let new_list = []
    let i = 0
    while i < count:
        ~ FIX: Use the new list_add function to grow the list
        list_add(new_list, i * 2)
        let i = i + 1
    end
    return new_list
end

let sequence = generate_sequence(5)
say "   -> Sequence generated by function: " + str(sequence)
say "   -> Element at index 3 of generated list: " + str(sequence[3])
say " "


say "--- Final List Test Finished ---"
